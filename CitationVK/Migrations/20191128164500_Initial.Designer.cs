// <auto-generated />
using System;
using CitationVK.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CitationVK.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191128164500_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CitationVK.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("Question");

                    b.Property<string>("Salt");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answer = "ZT6lnJoLZ7Y+49+22sCLJcLJetDMlxXAJtej1hKSuZY=",
                            Date = new DateTime(2019, 11, 28, 11, 44, 59, 934, DateTimeKind.Local).AddTicks(9355),
                            Email = "admin@email.com",
                            IsAdmin = true,
                            Password = "ZT6lnJoLZ7Y+49+22sCLJcLJetDMlxXAJtej1hKSuZY=",
                            Question = 1,
                            Salt = "zihAoF7T1ueScNEFeHRhzw=="
                        },
                        new
                        {
                            Id = 2,
                            Answer = "TXO/6bqbTq270XBfK9sgayiF3bcHjf1k6YrgdC5TdqY=",
                            Date = new DateTime(2019, 11, 28, 11, 44, 59, 936, DateTimeKind.Local).AddTicks(6885),
                            Email = "user@email.com",
                            IsAdmin = false,
                            Password = "TXO/6bqbTq270XBfK9sgayiF3bcHjf1k6YrgdC5TdqY=",
                            Question = 1,
                            Salt = "hfUOBYEYQMlpjyMVp4rscw=="
                        });
                });

            modelBuilder.Entity("CitationVK.Models.AccountClassifier", b =>
                {
                    b.Property<int>("AccountId");

                    b.Property<int>("ClassifierId");

                    b.HasKey("AccountId", "ClassifierId");

                    b.HasIndex("ClassifierId");

                    b.ToTable("AccountClassifiers");
                });

            modelBuilder.Entity("CitationVK.Models.AccountDataset", b =>
                {
                    b.Property<int>("AccountId");

                    b.Property<int>("DatasetId");

                    b.HasKey("AccountId", "DatasetId");

                    b.HasIndex("DatasetId");

                    b.ToTable("AccountDatasets");
                });

            modelBuilder.Entity("CitationVK.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract");

                    b.Property<bool>("Classification");

                    b.Property<int>("DatasetId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Pmid");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("DatasetId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("CitationVK.Models.Classifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Accuracy");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Model");

                    b.Property<string>("Name");

                    b.Property<double>("Precision");

                    b.Property<double>("Recall");

                    b.HasKey("Id");

                    b.ToTable("Classifiers");
                });

            modelBuilder.Entity("CitationVK.Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsPublic");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "CitationVK is a web-based machine learning tool.",
                            IsPublic = true
                        });
                });

            modelBuilder.Entity("CitationVK.Models.Dataset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("CitationVK.Models.AccountClassifier", b =>
                {
                    b.HasOne("CitationVK.Models.Account", "Account")
                        .WithMany("AccountClassifiers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CitationVK.Models.Classifier", "Classifier")
                        .WithMany("AccountClassifiers")
                        .HasForeignKey("ClassifierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CitationVK.Models.AccountDataset", b =>
                {
                    b.HasOne("CitationVK.Models.Account", "Account")
                        .WithMany("AccountDatasets")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CitationVK.Models.Dataset", "Dataset")
                        .WithMany("AccountDatasets")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CitationVK.Models.Article", b =>
                {
                    b.HasOne("CitationVK.Models.Dataset", "Dataset")
                        .WithMany("Articles")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
